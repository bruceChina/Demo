正则表达式
(1)特殊字符
\\ 	反斜线
\r	回车
\n 	换行
(2) 字符类
[abc]		 a,b,c中的任意一个字符
[^abc]		 除了a b c 以外的字符(非单词字符算不算?)
[a-zA-Z]	 所有的英文字母
[0-9]	 	 0-9这10个数字字符

(3)预定义字符类
.	任意字符
\d	数字 等价于[0-9]
\D	非数字 等价于[^0-9]  (非单词字符算不算?)
\w	单词字符 [a-zA-Z_0-9] 也就是所有的英文字母 0-9 10个数字 和 _ 下划线
\W	非单词字符

(4)边缘匹配器
^	行的开头
$	行的结尾
\b	单词边界 必须是非单词字符

(5)Greedy  数量词
x?	0次或1次
x*	0次或多个
x+	1次或多次
x{n}	恰好n次
x{n,}	至少n次
x{n,m}	至少n次 但是不能超过m次


6(组)
组的计算
((A)(B(C)))
第一组: (A)(B(C))
第二组: A
第三组: B(C)
第四组: C

组0 表示整个表达式

String 使用\ 必须用"\\"
正则匹配的时候用"\\\\"
正则匹配"." 用"\\."
正则匹配"\d" 用"\\d"


网络的3大要素
ip地址: 标志网络上每台计算机的地址
端口: 标志每个进程的逻辑地址
协议: 定义通信规则
tcp的优点
面向连接(3次握手)
数据没有限制
使用前建立通道
可靠
tcp缺点
速度慢

udp的优点
无连接
把数据打包 2^16 + 首部长度
速度快
udp的缺点
不可靠,不保证一定能够被接收

osi七层模型 应用层 表示层 会话层 传输层 网络层 数据链路层 物理层
TCP/IP4层模型 应用层 传输层 网际层 物理层

UDP 发送包的目的地由DatagramPacket决定
UDP 接收端的端口由DatagramSocket决定
















